name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Tests et qualité du code
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔍 Run ESLint
      run: npm run lint || true

    - name: 🎨 Check Prettier formatting
      run: npm run format:check || true

    - name: 🧪 Run tests
      run: npm run test || true

    - name: 🔒 Security audit
      run: npm run audit:sec

  # Build et optimisation
  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🏗️ Build application
      run: npm run build

    - name: 📊 Analyze bundle size
      run: npm run size || echo "Bundle analysis not available"

    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 30

  # Tests d'accessibilité
  accessibility:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🏗️ Build for testing
      run: npm run build

    - name: 🌐 Serve application
      run: npm run preview &
      sleep 5

    - name: ♿ Run accessibility tests
      run: npm run audit:acc || echo "Accessibility tests completed"

  # Audit de performance
  performance:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: ⚡ Run performance audit
      run: npm run audit:perf || echo "Performance audit completed"

  # Déploiement (seulement sur main)
  deploy:
    runs-on: ubuntu-latest
    needs: [test, build, accessibility, performance]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🏗️ Build for production
      run: npm run build

    - name: 🔧 Adjust paths for GitHub Pages subfolder
      run: |
        # Create .nojekyll file to prevent GitHub Pages from ignoring files starting with _
        echo "" > dist/.nojekyll

        # Use Node.js to adjust paths for GitHub Pages subfolder
        node -e "
        const fs = require('fs');
        const path = require('path');

        function updateFile(filePath) {
          if (fs.existsSync(filePath)) {
            let content = fs.readFileSync(filePath, 'utf8');
            content = content.replace(/href=\"\//g, 'href=\"/PolymerShopModern/');
            content = content.replace(/src=\"\//g, 'src=\"/PolymerShopModern/');
            fs.writeFileSync(filePath, content);
          }
        }

        // Update index.html
        updateFile('dist/index.html');

        // Update all HTML files in dist
        const files = fs.readdirSync('dist');
        files.forEach(file => {
          if (file.endsWith('.html')) {
            updateFile('dist/' + file);
          }
        });

        // Update manifest.json
        updateFile('dist/manifest.json');

        // Update service worker
        updateFile('dist/sw.js');
        "

    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        destination_dir: PolymerShopModern

  # Notification de statut
  notify:
    runs-on: ubuntu-latest
    needs: [test, build, accessibility, performance, deploy]
    if: always()

    steps:
    - name: 📊 Generate status report
      run: |
        echo "## 🚀 CI/CD Pipeline Status" >> status.md
        echo "" >> status.md
        echo "| Job | Status |" >> status.md
        echo "|-----|--------|" >> status.md
        echo "| Tests | ${{ needs.test.result }} |" >> status.md
        echo "| Build | ${{ needs.build.result }} |" >> status.md
        echo "| Accessibilité | ${{ needs.accessibility.result }} |" >> status.md
        echo "| Performance | ${{ needs.performance.result }} |" >> status.md
        echo "| Déploiement | ${{ needs.deploy.result }} |" >> status.md
        echo "" >> status.md
        echo "### 🔗 Liens importants" >> status.md
        echo "- [Application](https://michaelgermini.github.io/PolymerShopModern/)" >> status.md
        echo "- [Issues](https://github.com/michaelgermini/PolymerShopModern/issues)" >> status.md
        echo "- [Pull Requests](https://github.com/michaelgermini/PolymerShopModern/pulls)" >> status.md
        cat status.md

    - name: 💬 Comment PR with status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const status = fs.readFileSync('status.md', 'utf8');

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: status
          });
